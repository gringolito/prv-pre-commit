# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
repos:
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v3.1.0
    hooks:
    -   id: check-yaml                          # Checks yaml files for parseable syntax
    -   id: check-json                          # Checks json files for parseable syntax
    -   id: check-toml                          # Checks toml files for parseable syntax
    -   id: check-executables-have-shebangs     # Ensures that (non-binary) executables have a shebang
    -   id: check-case-conflict                 # Check for files that would conflict in case-insensitive filesystems
    -   id: check-added-large-files             # Prevent giant files from being committed
    -   id: check-merge-conflict                # Check for files that contain merge conflict strings
    -   id: check-symlinks                      # Checks for symlinks which do not point to anything
    -   id: pretty-format-json                  # Sets a standard for formatting JSON files
    -   id: debug-statements                    # Check for debugger imports and py37+ `breakpoint()` calls in python source
    -   id: detect-private-key                  # Detects the presence of private keys
    -   id: end-of-file-fixer                   # Ensures that a file is either empty, or ends with one newline
        exclude:
            requirements.txt
    -   id: fix-encoding-pragma                 # Add # -*- coding: utf-8 -*- to the top of python files
    -   id: forbid-new-submodules               # Prevent addition of new git submodules
    -   id: mixed-line-ending                   # Replaces or checks mixed line ending
    -   id: name-tests-test                     # Verifies that test files are named correctly
    -   id: trailing-whitespace                 # Trims trailing whitespace

-   repo: https://github.com/psf/black
    rev: 19.10b0
    hooks:
    -   id: black                           # Python code formatter

-   repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.5.1
    hooks:
    -   id: python-check-blanket-noqa       # Enforce that `noqa` annotations always occur with specific codes
    -   id: python-check-mock-methods       # Prevent common mistakes of `assert mck.not_called()`, `assert mck.called_once_with(...)` and `mck.assert_called`
    -   id: python-no-eval                  # A quick check for the `eval()` built-in function
    -   id: python-no-log-warn              # A quick check for the deprecated `.warn()` method of python loggers
    -   id: python-use-type-annotations     # Enforce that python3.6+ type annotations are used instead of type comments

-   repo: https://github.com/jstewmon/check-swagger
    rev: v0.1.4
    hooks:
    -   id: check-swagger           # Hook to validate swagger specs

-   repo: https://github.com/PyCQA/pylint
    rev: pylint-2.5.0
    hooks:
    -   id: pylint                  # a static code analysis tool for Python
        args: [
            --disable=E0401,                    # ignore missing imports issues
            "--disable=R0903,R0913",            # don't care about number of methods/arguments
            --disable=W0511,                    # allow TODOs on the code
            --disable=C0330,                    # black handles format and indentation
            ]

-   repo: https://gitlab.com/PyCQA/flake8
    rev: 3.8.3
    hooks:
    -   id: flake8                  # a command-line utility for enforcing style consistency across Python projects

-   repo: https://github.com/timothycrosley/isort
    rev: 5.4.2
    hooks:
    -   id: isort                   # Sort and organize Python imports
        args: [ -m=3, -tc, -l 100 ]
